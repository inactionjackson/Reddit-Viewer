{"version":3,"sources":["../../../../reddit-viewer/src/playSymbol.png","../../../../reddit-viewer/src/components/PostThumb.js","../../../../reddit-viewer/src/components/PostFull.js","../../../../reddit-viewer/src/components/NavBar.js","../../../../reddit-viewer/src/App.js","../../../../reddit-viewer/src/index.js"],"names":["module","exports","__webpack_require__","p","PostThumb","_ref","data","id","selectPost","imgSrc","screenHeight","preview","images","vHeightMin","window","screen","height","bestFitIndex","smallestDif","resolutions","forEach","img","i","width","sizeDif","Math","abs","url","source","replace","pickCorrectImage","bIsGif","variants","gif","bUseTitleForSelftext","selftext","smallTitle","title","substring","length","react_default","a","createElement","className","onClick","src","playSymbol","alt","href","author","PostFull","deselectPost","selfText","split","map","key","NavBar","currentSub","setSub","searchTerm","type","placeholder","onChange","e","target","value","onKeyUp","App","_useState","useState","_useState2","Object","slicedToArray","posts","setPosts","initialSub","name","results","RegExp","exec","location","search","decodeURIComponent","getUrlParameter","_useState3","_useState4","selectedSub","_useState5","_useState6","selectedPost","setSelectedPost","_useState7","_useState8","bScrolledToEnd","setbScrolledToEnd","handleScroll","postHolder","document","getElementsByClassName","innerHeight","documentElement","scrollTop","offsetHeight","removeEventListener","useEffect","addEventListener","URL","concat","axios","get","then","res","catch","console","log","getSubPosts","toConsumableArray","getMorePosts","post","index","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.ed9c5ae0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/playSymbol.5a980e83.png\";","import React from 'react';\r\nimport playSymbol from '../playSymbol.png';\r\n\r\n\r\nexport default function PostThumb({ data, id, selectPost, screenHeight }) {\r\n\r\n    let imgSrc = null\r\n    if (data.preview) {\r\n        imgSrc = pickCorrectImage(data.preview.images);\r\n    }\r\n    let bIsGif = data.preview.images[0].variants.gif ? true : false;\r\n    const bUseTitleForSelftext = data.selftext === '';\r\n\r\n    let smallTitle = data.title.substring(0, 40);\r\n    smallTitle += data.title.length > smallTitle.length ? '...' : '';\r\n\r\n    const handleSelectPost = () => {\r\n        selectPost(id);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='postThumb'>\r\n            <div className='postThumb_main' onClick={() => handleSelectPost()}>\r\n                {bIsGif ? <img src={playSymbol} alt='play gif' className='playSymbol' /> : ''}\r\n                {imgSrc ? <img src={imgSrc} alt={data.title}  /> : <div className='postThumb_text'><p>{bUseTitleForSelftext ? smallTitle : data.selftext.substring(0, 80) + '...'}</p> </div>}\r\n                <div className='postThumb_smallTitle'>\r\n                    <p>{smallTitle + ' : '}<a href={\"http://reddit.com/u/\" + data.author} >u/{data.author}</a></p>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction pickCorrectImage(images) {\r\n    if (!images) {\r\n        return null;\r\n    }\r\n\r\n    let correctImage = null;\r\n    const vHeightMin = window.screen.height/2;\r\n    const vWidthMin = 400;\r\n    let bestFitIndex = -1;\r\n    let smallestDif = -1;\r\n    images[0].resolutions.forEach((img, i)=>{\r\n        if(img.width >=  vWidthMin && img.height >= vHeightMin){\r\n            const sizeDif = Math.abs(img.width-vWidthMin);\r\n            if( sizeDif < smallestDif || smallestDif < 0){\r\n                bestFitIndex = i;\r\n                smallestDif = sizeDif;\r\n            }\r\n        }\r\n    });\r\n    correctImage = bestFitIndex !== -1 ? images[0].resolutions[bestFitIndex].url : images[0].source.url;\r\n    return correctImage.replace(/amp;/g, '');\r\n\r\n}","import React from 'react'\r\n\r\n\r\nexport default function PostFull({data,deselectPost}) {\r\n    let imgSrc = ''\r\n    if(data.preview){\r\n        if(data.preview.images[0].variants.gif){\r\n            imgSrc = data.preview.images[0].variants.gif.source.url.replace(/amp;/g,'');\r\n        }else{\r\n            imgSrc = data.preview.images[0].source.url.replace(/amp;/g,'');\r\n        }\r\n    }\r\n    const title = data.title;\r\n    let selfText = null;\r\n    if(data.selftext){\r\n        selfText = data.selftext.split(\"\\n\");\r\n    }\r\n    return (\r\n        \r\n        <div className='postFull_backing'  onClick={()=>deselectPost(null)}>\r\n            <div className='postFull'>\r\n                {imgSrc?<img src={imgSrc} alt={title} />:<div>{selfText ? selfText.map((p,key)=><p key={key}>{p}</p>) : title}</div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NavBar({currentSub, setSub}) {\r\n    let searchTerm = '';\r\n\r\n    const onKeyUp = (e)=>{\r\n        if(e.key === 'Enter'){\r\n            setSub(searchTerm);\r\n            e.target.value = '';\r\n        }\r\n    }\r\n    return (\r\n        <div className='navbar'>\r\n            <p>Reddit.com/r/</p>\r\n            <input type='text' placeholder={currentSub} onChange={(e)=>searchTerm=e.target.value} onKeyUp={(e)=>onKeyUp(e)} />\r\n            <button  onClick={()=>setSub(searchTerm)} >View</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport axios from 'axios';\n\nimport './App.css';\nimport PostThumb from './components/PostThumb';\nimport PostFull from './components/PostFull';\nimport NavBar from './components/NavBar';\n\n\n\n\nfunction App(){\n  const [posts, setPosts] = useState([]);\n  const initialSub = getUrlParameter('sub') || 'aww';\n  const [selectedSub, setSub] = useState(initialSub);\n  const [selectedPost,setSelectedPost] = useState(null);\n  const [bScrolledToEnd, setbScrolledToEnd] = useState(false);\n\n  /**checks if infinite scroll loading is needed */\n  const handleScroll = ()=>{\n    const postHolder = document.getElementsByClassName('postsHolder');\n    if(window.innerHeight + document.documentElement.scrollTop < postHolder[0].offsetHeight){\n      return;\n    }\n    window.removeEventListener('scroll',handleScroll); // remove listener so event doesn't fire multiple times while next batch is being loaded\n    setbScrolledToEnd(true);\n  }\n\n  /**adds scroll event listener for infinite scroll, should only fire at initial load */\n  useEffect(()=>{\n    window.addEventListener('scroll',handleScroll);\n    return ()=>window.removeEventListener('scroll',handleScroll);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  /**handles initial load anytime selected sub changes */\n  useEffect(() => {\n    const getSubPosts = () =>{\n      const URL = `http://localhost:5000/api/redditviewer/${selectedSub}`;\n      axios.get(URL).then(res =>res.data).then(data => {\n        setPosts(data);\n      }).catch((e)=>console.log(e));\n    }\n    getSubPosts();\n  },[selectedSub]);\n\n  /**handles infinite scroll load requests */\n  useEffect(()=>{\n    if(!bScrolledToEnd){\n      return;\n    }\n    setbScrolledToEnd(false);\n    const getMorePosts = () =>{\n      const URL = `http://localhost:5000/api/redditviewer/${selectedSub}/${posts[posts.length-1].data.name}`;\n      axios.get(URL).then(res =>res.data).then(data => {\n        setPosts([...posts,...data])\n        window.addEventListener('scroll',handleScroll);\n      }).catch((e)=>console.log(e));\n    }\n    getMorePosts();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[bScrolledToEnd]);\n  \n  return (\n    <div className=\"app\">\n      <NavBar currentSub={selectedSub} setSub={setSub} />\n      <div className=\"postsHolder\">\n        \n        {posts.map((post, index) =>(\n          <PostThumb key={index} data={post.data} id={index} selectPost={setSelectedPost} />\n        ))}\n      </div>\n      {selectedPost !== null ? <PostFull data={posts[selectedPost].data} deselectPost={setSelectedPost} /> : ''}\n    </div>\n  );\n}\nfunction getUrlParameter(name) {\n  name = name.replace(/[/, '\\\\[').replace(/[\\]]/, '\\\\]');\n  var regex = new RegExp('[\\\\?&]' + name + '=([^&#]*)');\n  var results = regex.exec(window.location.search);\n  return results === null ? '' : decodeURIComponent(results[1].replace(/\\+/g, ' '));\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}